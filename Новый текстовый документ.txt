Привет!
Пока такое решение приходит на ум.
Для подсчета слов буду использовать словарь.
Ключом будет само слово,а значение его количество в тексте.

Сам файл буду считывать построчно.Значение каждой строки буду добавлять в переменную типа StringBuilder.
После обработки строки значение переменной очищается.
Это поможет снизить нагрузку на CLR.

Я в правильном направлении рассуждаю? 

Напомни пжлст какие есть ограничения по стеку? 
БД я же не могу использовать или скажем MemoryMappedFile?



Привет!Такой вопрос.Достать данные(слова) из StringBuilder будет не сложно.
Далее я их преобразую в строку и добавляю в словарь в качестве ключа.После чего остается "отсортировать" его по ключу,что будет не сложно т.к строки сравниваются по значению(а если использовать SortedDictionary то и это делать не нужно) и записать все это в файл.

Можешь намекнуть что я упустил? Просто при описанной мной реализации это не выглядит как задача на много часов.


Ещё идея для оптимизации сделать ключом для словаря не string,а StringBuilder . Но тогда я не понимаю как сортировать.
Для таких случаев применяют IComparable,но тут я не знаю как это реализовать. Только если свой собственный класс создать.